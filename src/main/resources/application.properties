# Spring Boot application properties

# H2 Database Configuration (for development)
# spring.datasource.url=jdbc:h2:mem:pcdDb;DB_CLOSE_DELAY=-1
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# MySQL Configuration (for production - configure later)
# spring.datasource.url=jdbc:mysql://localhost:3306/pcd_manager_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
# spring.datasource.username=your_mysql_username
# spring.datasource.password=your_mysql_password
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# PostgreSQL Datasource Configuration (commented out for H2 usage)
# spring.datasource.url=${SPRING_DATASOURCE_URL}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
# spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration for PostgreSQL (commented out for H2 usage)
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# H2 Database Configuration (active)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:file:./data/pcdmanager;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Security configuration (will be refined)
spring.security.user.name=user
spring.security.user.password=password

# Remove file upload size limits
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

# Enable live template and static resource reloading
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.check-template-location=true
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.period=0
spring.web.resources.chain.cache=false

# DevTools Configuration (enhanced for faster reloading)
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.poll-interval=1s
spring.devtools.restart.quiet-period=400ms
spring.devtools.restart.additional-paths=src/main/java,src/main/resources
spring.devtools.restart.additional-exclude=META-INF/maven/**
spring.devtools.restart.log-condition-evaluation-delta=false
spring.devtools.restart.trigger-file=.reloadtrigger

# Set active profile to development mode
spring.profiles.active=dev

# Configure upload directory
app.upload.dir=./uploads

# Enhanced logging for development
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.transaction=DEBUG
logging.level.com.pcd.manager=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.devtools=DEBUG

# Improve upload handling
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2MB

# Allow circular dependencies between services
spring.main.allow-circular-references=true

# Disable caching completely in development mode
spring.web.resources.chain.strategy.content.enabled=false
spring.web.resources.chain.enabled=false

# Additional dev-friendly settings
server.error.include-stacktrace=always
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=true

# Hibernate configuration
# spring.jpa.properties.hibernate.format_sql=true # This was duplicated, already set above

# For MySQL in production (currently commented out)
# spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/pcdmanager
# spring.datasource.username=root
# spring.datasource.password=secret
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Add multipart file upload configuration
# spring.servlet.multipart.enabled=true # This was duplicated
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.file-size-threshold=2MB

# Enable path migration for existing file paths in the database
app.migration.path-fix=true

# Enable orphaned file record cleanup
app.cleanup.orphaned-files=true