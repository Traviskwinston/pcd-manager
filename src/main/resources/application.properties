# Spring Boot application properties

# Session timeout - keep users logged in for 24 hours of inactivity
server.servlet.session.timeout=24h

# H2 Database Configuration (for development)
# spring.datasource.url=jdbc:h2:mem:pcdDb;DB_CLOSE_DELAY=-1
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# MySQL Configuration (for production - configure later)
# spring.datasource.url=jdbc:mysql://localhost:3306/pcd_manager_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
# spring.datasource.username=your_mysql_username
# spring.datasource.password=your_mysql_password
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Database configuration is now profile-specific:
# - application-dev.properties: H2 in-memory database
# - application-prod.properties: PostgreSQL with Render.com environment variables
# Disable SQL logging for better performance (re-enable for debugging)
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# H2 Database Configuration (commented out)
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.datasource.url=jdbc:h2:file:./data/pcdmanager;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=update

# Security configuration (will be refined)
spring.security.user.name=user
spring.security.user.password=password

# Remove file upload size limits
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

# Template and static resource configuration - profile-specific optimizations
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.check-template-location=true
spring.web.resources.static-locations=classpath:/static/

# DevTools Configuration - profile-specific settings
spring.devtools.restart.poll-interval=1s
spring.devtools.restart.quiet-period=400ms
spring.devtools.restart.additional-paths=src/main/java,src/main/resources
spring.devtools.restart.additional-exclude=META-INF/maven/**
spring.devtools.restart.log-condition-evaluation-delta=false
spring.devtools.restart.trigger-file=.reloadtrigger

# Set active profile - uses environment variable, defaults to development for hot-reload
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# Configure upload directory
app.upload.dir=./uploads

# Enhanced logging for development - COMMENT OUT FOR BETTER PERFORMANCE
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# logging.level.org.springframework.transaction=DEBUG
logging.level.com.pcd.manager=INFO
logging.level.com.pcd.manager.service.ExcelCheckboxService=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.boot.devtools=DEBUG

# Improve upload handling
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2MB

# Allow circular dependencies between services
spring.main.allow-circular-references=true

# Resource caching configuration - profile-specific settings

# Additional dev-friendly settings
server.error.include-stacktrace=always
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=true

# Hibernate configuration
# spring.jpa.properties.hibernate.format_sql=true # This was duplicated, already set above

# For MySQL in production (currently commented out)
# spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/pcdmanager
# spring.datasource.username=root
# spring.datasource.password=secret
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Add multipart file upload configuration
# spring.servlet.multipart.enabled=true # This was duplicated
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.file-size-threshold=2MB

# Enable path migration for existing file paths in the database
app.migration.path-fix=true

# Enable orphaned file record cleanup
app.cleanup.orphaned-files=true