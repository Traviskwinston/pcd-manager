# Production specific Spring Boot application properties

# PostgreSQL Datasource Configuration - Uses Render.com environment variables
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/pcdmanager}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:pcdmanagerdb_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:3g6US1N85mHu4ZiPmVLVF0ES9CEIGkxM}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP connection pool optimization for 2GB RAM
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximum-pool-size=8
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate Configuration for PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Hibernate performance optimizations for 2GB RAM
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Production template and resource caching
spring.thymeleaf.cache=true
spring.web.resources.cache.period=3600
spring.web.resources.chain.cache=true
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.enabled=true

# Disable DevTools in production
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Production logging - minimal for performance
logging.level.com.pcd.manager=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN

# Cache configuration for production performance
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=30m,expireAfterAccess=15m,recordStats

# Production error handling - less verbose
server.error.include-stacktrace=never
server.error.include-message=always
server.error.include-binding-errors=never
server.error.include-exception=false

# Production file upload limits
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.file-size-threshold=5MB

# Production upload directories (can be overridden by environment variables)
app.upload.dir=${UPLOAD_DIR:./uploads} 